<!DOCTYPE html>
<html>
  <head>
    <title>eCloud</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />

    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
    <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
      <script src="javascripts/Tween.js"></script>

      <script src="javascripts/map.js"></script>
      <script src="javascripts/parsePaperData.js"></script>
      <script src="javascripts/visualization.js"></script>

      <script type="application/javascript" src="bower_components/Processing.js/processing.js"></script>
      <script type="application/javascript" src="bower_components/jquery/dist/jquery.min.js"></script>
      <script type="application/javascript" src="bower_components/lodash/lodash.js"></script>

      <script type="application/javascript" src="javascripts/Tuio.js"></script>
      <script src="socket.io/socket.io.js"></script>
      <script type="application/javascript">
          var socket = io();
      </script>
      <script src="socket.io/socket.io.js"></script>
      <script type="application/javascript" src="http://localhost:5000/libs/socket.io.js"></script>





  </head>
  <body onload="javascript:loadAll();">
   <div id="map"></div>
  <canvas id="overlay"></canvas>
  </body>
<script type="application/javascript">
    var __vis;
    var __users;
    var __solos;
    var loadAll = function() {
        var _width = $(window).width();
        var _height = $(window).height();
        $("#overlay").width(_width);
        $("#overlay").height(_height);
        $("#map").width(_width);
        $("#map").height(_height);



        generateMap();

        __vis = new visualization();
        __vis.init("overlay");

        //connect to socket.io

        socket.emit("registerVisualization");
        socket.on("update", function (msg) {
            //console.log(msg);
            Object.keys(msg.users).forEach(function(user){
                convertMapCoordToScreen(msg.users[user]);

            });
            __users = msg.users;
            __solos = msg.solos;
            var countries = getCountries();
            __vis.update(__users,__solos,countries);

        });



        //TUIO STUFF
        var client = new Tuio.Client({
                    host: "http://localhost:5000"
                }),

                onAddTuioCursor = function(addCursor) {
                    var x = addCursor.getScreenX(_width);
                    var y = addCursor.getScreenY(_height);
                    __vis.addTouch(addCursor.cursorId,x,y);

                },

                onUpdateTuioCursor = function(updateCursor) {
                    var x = updateCursor.getScreenX(_width);
                    var y = updateCursor.getScreenY(_height);
                    __vis.updateTouch(updateCursor.cursorId,x,y);


                },

                onRemoveTuioCursor = function(removeCursor) {
                    //always remove, wherever finger is hovering
                    __vis.removeTouch(removeCursor.cursorId);


                },

                onAddTuioObject = function(addObject) {
                    //console.log(addObject);
                },

                onUpdateTuioObject = function(updateObject) {
                    //console.log(updateObject);
                },

                onRemoveTuioObject = function(removeObject) {
                    //console.log(removeObject);
                },

                onRefresh = function(time) {
                    //console.log(time);
                };

        client.on("addTuioCursor", onAddTuioCursor);
        client.on("updateTuioCursor", onUpdateTuioCursor);
        client.on("removeTuioCursor", onRemoveTuioCursor);
        client.on("addTuioObject", onAddTuioObject);
        client.on("updateTuioObject", onUpdateTuioObject);
        client.on("removeTuioObject", onRemoveTuioObject);
        client.on("refresh", onRefresh);
        client.connect();



    }

</script>
</html>
